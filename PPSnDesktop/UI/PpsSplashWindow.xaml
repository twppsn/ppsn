<ui:PpsWindow x:Class="TecWare.PPSn.UI.PpsSplashWindow"
			  x:ClassModifier="internal"
			  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			  xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
			  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			  xmlns:sys="clr-namespace:System;assembly=mscorlib"
			  xmlns:local="clr-namespace:TecWare.PPSn.UI"
			  xmlns:ui="http://tecware-gmbh.de/ppsn/wpf/2015"
			  mc:Ignorable="d"
			  x:Name="PPSnSplashWindow"
			  Title="Anmelden PPSn" Height="400" Width="640" WindowStyle="None" ResizeMode="NoResize" WindowStartupLocation="CenterScreen">

	<Window.InputBindings>
        <KeyBinding Key="Esc" Command="{x:Static ApplicationCommands.Close}"/>
    </Window.InputBindings>

	<Window.Resources>
		<Style TargetType="{x:Type TextBlock}">
			<Setter Property="VerticalAlignment" Value="Bottom" />
			<Setter Property="FontSize" Value="14" />
			<Setter Property="Margin" Value="0,6" />
			<Style.Triggers>
				<Trigger Property="IsEnabled" Value="false">
					<Setter Property="Opacity" Value="0.4" />
				</Trigger>
			</Style.Triggers>
		</Style>

		<Style TargetType="{x:Type PasswordBox}">
			<Setter Property="PasswordChar" Value="●" />
			<Setter Property="Foreground" Value="{DynamicResource PPSnWinodwForegroundBrush}" />
			<Setter Property="Background" Value="{DynamicResource PPSnWinodwBackgroundBrush}" />
			<Setter Property="BorderThickness" Value="2" />
			<Setter Property="BorderBrush" Value="{DynamicResource PPSnControlNormalBorderBrush}" />
			<Setter Property="SelectionBrush" Value="{DynamicResource PPSnSelectionBarBrush}" />
			<Setter Property="SelectionOpacity" Value=".25" />
			<Setter Property="FontSize" Value="14" />
			<Setter Property="FocusVisualStyle" Value="{x:Null}" />
			<Setter Property="VerticalContentAlignment" Value="Center" />
			<Setter Property="Padding" Value="4,0" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type PasswordBox}">
						<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
							<ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsKeyboardFocused" Value="true">
								<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource PPSnControlFocusedBorderBrush}" />
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Opacity" TargetName="border" Value="0.4" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</Window.Resources>

	<Border Background="{ui:PpsColor {x:Static ui:PpsTheme.WindowBackground}}">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="96"/>
				<ColumnDefinition/>
			</Grid.ColumnDefinitions>
			<Grid.RowDefinitions>
				<RowDefinition Height="*" />
				<RowDefinition Height="Auto" />
			</Grid.RowDefinitions>
			<Border x:Name="leftBar" Grid.Column="0" Grid.RowSpan="2" Background="{ui:PpsColor {x:Static ui:PpsTheme.WindowActive}}">
				<Viewbox Width="52" Height="48" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="0,16" Opacity=".5">
					<Image Width="152" Height="151" Source="pack://application:,,,/PPSn.Desktop.UI;component/Themes/Images/SplashLogo.png"/>
				</Viewbox>
			</Border>

			<!-- Close button -->
			<ui:PpsButton Grid.Column="1" Command="{x:Static ApplicationCommands.Close}"
						  ToolTip="Schließen"
						  DisplayMode="Transparent"
						  GeometryName="windowClose"
						  GeometrySize="16"
						  ImageOpacity="1"
						  Width="34"
						  Height="26"
						  Margin="0,0,0,0"
						  HorizontalAlignment="Right"
						  VerticalAlignment="Top">
				<ui:PpsButton.Style>
					<Style TargetType="ui:PpsButton" BasedOn="{StaticResource {x:Type ui:PpsButton}}">
						<Setter Property="Visibility" Value="Visible" />
						<Style.Triggers>
							<DataTrigger Binding="{Binding ActivePageNum,Mode=OneWay}">
								<DataTrigger.Value>
									<sys:Int32>0</sys:Int32>
								</DataTrigger.Value>
								<Setter Property="Visibility" Value="Hidden" />
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</ui:PpsButton.Style>
			</ui:PpsButton>

			<!-- Error State -->
			<Grid Grid.Column="1" Grid.Row="1" Height="32">
				<Grid.Style>
					<Style TargetType="Grid">
						<Setter Property="Visibility" Value="Visible" />
						<Style.Triggers>
							<DataTrigger Binding="{Binding ActivePageNum,Mode=OneWay}">
								<DataTrigger.Value>
									<sys:Int32>0</sys:Int32>
								</DataTrigger.Value>
								<Setter Property="Visibility" Value="Collapsed" />
							</DataTrigger>
							<DataTrigger Binding="{Binding ActivePageNum,Mode=OneWay}">
								<DataTrigger.Value>
									<sys:Int32>2</sys:Int32>
								</DataTrigger.Value>
								<Setter Property="Visibility" Value="Collapsed" />
							</DataTrigger>
							<DataTrigger Binding="{Binding HasErrorState}" Value="False" >
								<Setter Property="Visibility" Value="Collapsed" />
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</Grid.Style>
				<Button DataContext="{Binding ErrorState}" Command="{x:Static local:PpsSplashWindow.ShowErrorDetailsCommand}">
					<Button.Content>
						<StackPanel Orientation="Horizontal">
							<ui:PpsGeometryImage GeometryName="exception" GeometryCircled="False" />
							<TextBlock Text="{Binding Text}" />
						</StackPanel>
					</Button.Content>
					<Button.Style>
						<Style TargetType="Button">
							<Setter Property="HorizontalAlignment" Value="Stretch" />
							<Setter Property="HorizontalContentAlignment" Value="Left" />
							<Setter Property="BorderBrush" Value="{x:Null}" />
							<Setter Property="Background" Value="{DynamicResource PPSnButtonBackgroundBrush}" />
						</Style>
					</Button.Style>
				</Button>
			</Grid>
			
			<!-- Waiting view -->
			<Grid Grid.Column="1" Margin="32,0">
				<Grid.Style>
					<Style TargetType="{x:Type Grid}">
						<Setter Property="Visibility" Value="Hidden"/>
						<Style.Triggers>
							<DataTrigger Binding="{Binding ActivePageNum,Mode=OneWay}">
								<DataTrigger.Value>
									<sys:Int32>0</sys:Int32>
								</DataTrigger.Value>
								<Setter Property="Visibility" Value="Visible"/>
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</Grid.Style>
				<Grid.RowDefinitions>
					<RowDefinition Height="64"/>
					<RowDefinition/>
				</Grid.RowDefinitions>
				<TextBlock Grid.Row="0" Text="Status" FontSize="24" HorizontalAlignment="Left" VerticalAlignment="Top" Padding="0,8,0,0"/>
				<TextBlock Grid.Row="1" Text="{Binding StatusText, Mode=OneWay}" TextWrapping="Wrap" Foreground="{ui:PpsColor {x:Static ui:PpsTheme.WindowForeground}}" HorizontalAlignment="Left" VerticalAlignment="Top" FontSize="20"/>
			</Grid>
			
			<!-- Select Shell -->
			<Grid Grid.Column="1">
				<Grid.Style>
					<Style TargetType="{x:Type Grid}">
						<Setter Property="Visibility" Value="Hidden"/>
						<Style.Triggers>
							<DataTrigger Binding="{Binding ActivePageNum,Mode=OneWay}">
								<DataTrigger.Value>
									<sys:Int32>1</sys:Int32>
								</DataTrigger.Value>
								<Setter Property="Visibility" Value="Visible"/>
								<Setter Property="FocusManager.FocusedElement" Value="{Binding ElementName=shellInfoList,Mode=OneTime}"/>
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</Grid.Style>

				<Grid.RowDefinitions>
					<RowDefinition Height="Auto"/>
					<RowDefinition />
				</Grid.RowDefinitions>

				<TextBlock Grid.Row="0" Text="Mandant auswählen" FontSize="24" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="16,16,4,0"/>

				<ListBox Grid.Row="1" x:Name="shellInfoList" Margin="16,4,16,16" ItemsSource="{Binding ShellState}" IsSynchronizedWithCurrentItem="True" BorderBrush="{x:Null}" Background="Transparent">
					<ListBox.InputBindings>
						<KeyBinding Key="Return" Command="{x:Static ApplicationCommands.Open}" />
					</ListBox.InputBindings>
					<ListBox.ItemContainerStyle>
						<Style TargetType="ListBoxItem">
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="ListBoxItem">
										<Border x:Name="border" Background="{DynamicResource PPSnButtonBackgroundBrush}" Padding="3" Margin="0,3,3,3">
											<Border.InputBindings>
												<MouseBinding Gesture="LeftDoubleClick" Command="{x:Static ApplicationCommands.Open}" CommandParameter="{Binding ElementName=border,Path=DataContext,Mode=OneWay}" />
											</Border.InputBindings>
											<ContentPresenter />
										</Border>
										<ControlTemplate.Triggers>
											<Trigger Property="IsSelected" Value="True" >
												<Setter TargetName="border" Property="Background" Value="{DynamicResource PPSnSelectionBarBrush}" />
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
						</Style>
					</ListBox.ItemContainerStyle>
					<ListBox.ItemTemplate>
						<DataTemplate>
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition />
									<RowDefinition />
								</Grid.RowDefinitions>
								<TextBlock Grid.Row="0" Foreground="{DynamicResource PPSnWindowActiveBrush}">
									<Run Text="{Binding Name,Mode=OneTime}" Foreground="{DynamicResource PPSnWindowForegroundBrush}" />
									<Run Text="(" /><Run Text="{Binding DisplayName,Mode=OneTime}" /><Run Text=")" />
								</TextBlock>
								<TextBlock Grid.Row="1" Text="{Binding Uri,Mode=OneTime}" />
							</Grid>
						</DataTemplate>
					</ListBox.ItemTemplate>
				</ListBox>
			</Grid>

			<!-- New shell -->
			<Grid Grid.Column="1" DataContext="{Binding EditShellState}" Width="300">
				<Grid.Style>
					<Style TargetType="{x:Type Grid}">
						<Setter Property="Visibility" Value="Hidden"/>
						<Style.Triggers>
							<DataTrigger Binding="{Binding ElementName=PPSnSplashWindow, Path=ActivePageNum, Mode=OneWay}">
								<DataTrigger.Value>
									<sys:Int32>2</sys:Int32>
								</DataTrigger.Value>
								<Setter Property="Visibility" Value="Visible"/>
								<Setter Property="FocusManager.FocusedElement" Value="{Binding ElementName=mandantTextBox,Mode=OneTime}"/>
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</Grid.Style>

				<Grid.RowDefinitions>
					<RowDefinition/>
					<RowDefinition Height="48"/>
					<RowDefinition Height="Auto"/>
					<RowDefinition Height="48"/>
					<RowDefinition Height="Auto"/>
					<RowDefinition/>
					<RowDefinition Height="64"/>
				</Grid.RowDefinitions>

				<TextBlock Grid.Row="0" Text="Neue Verbindung" FontSize="24" HorizontalAlignment="Left" VerticalAlignment="Top" Padding="0,8,0,0"/>

				<TextBlock Grid.Row="1" Text="Mandant:"/>
				<ui:PpsTextBox Grid.Row="2" x:Name="mandantTextBox" Text="{Binding NewName,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"/>

				<TextBlock Grid.Row="3" Text="URI:"/>
				<ui:PpsTextBox Grid.Row="4" Text="{Binding NewUri, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
				
				<StackPanel Grid.Row="6" Orientation="Horizontal" Height="31" HorizontalAlignment="Right" TextElement.FontSize="14">
					<ui:PpsButton Content="Anlegen"
								  Command="{x:Static ApplicationCommands.Open}"
								  Width="110" />
					<ui:PpsButton Content="Abbrechen"
								  Command="{x:Static ApplicationCommands.Close}"
								  Width="110"
								  Margin="12,0,0,0" />

				</StackPanel>
			</Grid>

			<!-- Login view -->
			<Grid Grid.Column="1" DataContext="{Binding LoginState}" Width="300">
				<Grid.Style>
					<Style TargetType="{x:Type Grid}">
						<Setter Property="Visibility" Value="Hidden"/>
						<Style.Triggers>
							<DataTrigger Binding="{Binding ElementName=PPSnSplashWindow, Path=ActivePageNum, Mode=OneWay}">
								<DataTrigger.Value>
									<sys:Int32>3</sys:Int32>
								</DataTrigger.Value>
								<Setter Property="Visibility" Value="Visible"/>
								<Setter Property="FocusManager.FocusedElement" Value="{Binding ElementName=userTextBox}"/>
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</Grid.Style>
				
				<Grid.RowDefinitions>
					<RowDefinition/>
					<RowDefinition Height="40"/>
					<RowDefinition Height="Auto"/>
					<RowDefinition Height="48"/>
					<RowDefinition Height="Auto"/>
					<RowDefinition/>
					<RowDefinition Height="64"/>
				</Grid.RowDefinitions>

				<TextBlock Grid.Row="0" FontSize="24" HorizontalAlignment="Left" VerticalAlignment="Top" Padding="0,8,0,0">
					<Run Text="Anmelden an" />
					<Run Text="{Binding ShellName,Mode=OneWay}" />
				</TextBlock>

				<TextBlock Grid.Row="1" Text="Nutzer:" />
				<ui:PpsTextBox Grid.Row="2" x:Name="userTextBox" Text="{Binding UserName,UpdateSourceTrigger=PropertyChanged}">
					<ui:PpsTextBox.InputBindings>
						<KeyBinding Key="Return" Command="local:PpsSplashWindow.EnterKeyCommand"/>
					</ui:PpsTextBox.InputBindings>
				</ui:PpsTextBox>

				<TextBlock Grid.Row="3" Text="Password:" IsEnabled="{Binding IsPasswordEnabled}"/>
				<PasswordBox Grid.Row="4" x:Name="passwordTextBox" PasswordChanged="PasswordChanged" IsEnabled="{Binding IsPasswordEnabled}">
					<PasswordBox.InputBindings>
						<KeyBinding Key="Return" Command="local:PpsSplashWindow.EnterKeyCommand"/>
					</PasswordBox.InputBindings>
				</PasswordBox>
				<CheckBox Grid.Row="5" IsChecked="{Binding SavePassword}" Content="Password speichern" IsEnabled="{Binding IsPasswordSaveEnabled}" Style="{StaticResource PPSnSysCheckBoxStyle}" BorderThickness="2" FontSize="14" VerticalAlignment="Top" Margin="0,12,0,0"/>

				<StackPanel Grid.Row="6" Orientation="Horizontal" Height="31" HorizontalAlignment="Right" TextElement.FontSize="14">
					<ui:PpsButton Content="Anmelden"
								   Command="{x:Static ApplicationCommands.Open}"
								   Width="110" />
					<ui:PpsButton Content="Abbrechen"
								   Command="{x:Static ApplicationCommands.Close}"
								   Width="110"
								   Margin="12,0,0,0"/>
				</StackPanel>
			</Grid>
		
			<!-- Runtime -->
			<Grid Grid.Column="1" Margin="32,0">
				<Grid.Style>
					<Style TargetType="{x:Type Grid}">
						<Setter Property="Visibility" Value="Hidden"/>
						<Style.Triggers>
							<DataTrigger Binding="{Binding ElementName=PPSnSplashWindow, Path=ActivePageNum, Mode=OneWay}">
								<DataTrigger.Value>
									<sys:Int32>4</sys:Int32>
								</DataTrigger.Value>
								<Setter Property="Visibility" Value="Visible"/>
								<Setter Property="FocusManager.FocusedElement" Value="{Binding ElementName=okButton}"/>
							</DataTrigger>
						</Style.Triggers>
					</Style>
				</Grid.Style>

				<Grid.RowDefinitions>
					<RowDefinition/>
					<RowDefinition Height="*"/>
					<RowDefinition Height="Auto" />
					<RowDefinition/>
					<RowDefinition Height="64"/>
				</Grid.RowDefinitions>

				<TextBlock Grid.Row="0" Text="Fehlende Abhängigkeiten" FontSize="24" HorizontalAlignment="Left" VerticalAlignment="Top" Padding="0,8,0,0"/>

				<ItemsControl Grid.Row="1" x:Name="runtimeInstallList">
					<ItemsControl.ItemTemplate>
						<DataTemplate>
							<StackPanel Orientation="Horizontal">
								<ui:PpsGeometryImage GeometryName="marker" Height="16" Width="16" Margin="4" />
								<TextBlock Text="{Binding}" Margin="4" VerticalAlignment="Center" />
							</StackPanel>
						</DataTemplate>
					</ItemsControl.ItemTemplate>
				</ItemsControl>

				<TextBlock x:Name="runtimeAdminInfo" Grid.Row="2" Text="Eingriff des Administrators notwendig." />

				<StackPanel Grid.Row="4" Orientation="Horizontal" Height="31" HorizontalAlignment="Right" TextElement.FontSize="14">
					<ui:PpsButton x:Name="okButton" 
								  Content="Installieren"
								  Command="{x:Static ApplicationCommands.Open}"
								  Width="110" />
					<ui:PpsButton Content="Abbrechen"
								  Command="{x:Static ApplicationCommands.Close}"
								  Width="110"
								  Margin="12,0,0,0" />
				</StackPanel>
			</Grid>
		</Grid>
	</Border>
</ui:PpsWindow>
