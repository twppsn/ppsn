<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:ui="http://tecware-gmbh.de/ppsn/wpf/2015"
	xmlns:bde="clr-namespace:TecWare.PPSn.Bde"
	xmlns:main="clr-namespace:TecWare.PPSn.Main"
    xmlns:uic="clr-namespace:TecWare.PPSn.UI"
	xmlns:sys="clr-namespace:System;assembly=mscorlib">

	<SolidColorBrush x:Key="ProgressBackGroundBrush" Color="{DynamicResource PPSnDesktopColor}" Opacity=".75" />

	<DataTemplate x:Key="PpsProgressTemplate">
		<Grid Background="{StaticResource ProgressBackGroundBrush}">
			<Grid.RowDefinitions>
				<RowDefinition/>
				<RowDefinition Height="72"/>
				<RowDefinition Height="Auto"/>
				<RowDefinition/>
			</Grid.RowDefinitions>
			<ui:PpsProgressControl x:Name="ProgressRing" Grid.Row="1"  Width="64" Height="64" Visibility="Visible" />
			<TextBlock Grid.Row="2" MaxWidth="400" HorizontalAlignment="Center" IsHitTestVisible="False" Text="{Binding CurrentText}" TextTrimming="CharacterEllipsis"  TextWrapping="WrapWithOverflow" />
		</Grid>
	</DataTemplate>

	<Style TargetType="bde:PpsBdePaneHost">
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="bde:PpsBdePaneHost">
					<Grid>
						<ContentPresenter x:Name="PART_Control" Content="{TemplateBinding Control}" />
						<ui:PpsProgressOverlay x:Name="PART_Progress" ProgressTemplate="{StaticResource PpsProgressTemplate}" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="main:PpsWindowPaneHost">
		<!--<Setter Property="FocusManager.IsFocusScope" Value="True" />-->
		<!--<Setter Property="KeyboardNavigation.TabNavigation" Value="Cycle" />-->

		<Setter Property="Focusable" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="main:PpsWindowPaneHost">
					<Grid>
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition />
							</Grid.RowDefinitions>
							<Border Grid.ColumnSpan="2" BorderBrush="{DynamicResource PPSnSeparatorBrush}" Background="{DynamicResource PPSnSideBarBackgroundBrush}"
									Height="36" BorderThickness="0,0,0,1" Padding="0,0,0,1" >
								<ui:PpsCommandBar Name="PART_CommandBar" BasicCommands="{TemplateBinding Commands}" Mode="Mixed" Margin="32,0,0,0" />
							</Border>
							<ContentPresenter Grid.Row="1" x:Name="PART_Control" Content="{TemplateBinding Control}" />
							<uic:PpsWindowPaneCharmBarControl Grid.Column="1" Grid.Row="1" x:Name="PART_CharmBar" Focusable="False"/>
						</Grid>
						<ui:PpsProgressOverlay x:Name="PART_Progress" Grid.ColumnSpan="2" Grid.RowSpan="2" ProgressTemplate="{StaticResource PpsProgressTemplate}" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="uic:PpsWindowPaneCharmBarControl">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="uic:PpsWindowPaneCharmBarControl">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="52" MaxWidth="52" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition />
							<RowDefinition />
						</Grid.RowDefinitions>
						<Border x:Name="AnimatedBorder" Width="0" Height="0" Visibility="Hidden" />
						<Border x:Name="ContentBorder" Grid.ColumnSpan="2" Grid.RowSpan="2" Background="{DynamicResource PPSnSideBarBackgroundBrush}"
								Margin="0,0,0,0" Padding="0,0,64,0" HorizontalAlignment="Right" Visibility="Collapsed">
							<Border.Width>
								<MultiBinding Converter="{x:Static ui:PpsWindowPaneCharmBarControl.WithConverter}">
									<Binding Path="Width" ElementName="AnimatedBorder" />
									<Binding Path="Parent" RelativeSource="{RelativeSource TemplatedParent}" />
								</MultiBinding>
							</Border.Width>
							<Grid DataContext="{Binding CurrentPane, RelativeSource={RelativeSource TemplatedParent}}">
								<Grid.RowDefinitions>
									<RowDefinition Height="32" />
									<RowDefinition />
								</Grid.RowDefinitions>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition />
								</Grid.ColumnDefinitions>
								<ui:PpsGeometryImage GeometryName="{Binding Image, Mode=OneWay}" GeometryCircled="False"
													  Width="20" Height="20" Margin="6,0,0,0" HorizontalAlignment="Left"
													  Foreground="{DynamicResource PPSnActionButtonBrush}" Opacity=".65" />
								<TextBlock Text="{Binding Text, Mode=OneWay}" VerticalAlignment="Center" Margin="32,0,16,0"
										   FontSize="18" Foreground="{DynamicResource PPSnWindowForegroundBrush}" />
								<ui:PpsButton Command="{x:Static ApplicationCommands.Close}" DisplayMode="Image" GeometryName="nextPane" GeometrySize="24" 
											   Foreground="{DynamicResource PPSnWindowForegroundBrush}" ImageOpacity="1"
											   Grid.Column="1" Width="32" HorizontalAlignment="Left" ToolTip="Schließen" />

								<ContentPresenter Grid.Row="1" Grid.ColumnSpan="2" Content="{Binding Content, Mode=OneWay}" />
							</Grid>
						</Border>
						<TextBlock Grid.Column="1" Text="{TemplateBinding ObjectName}"
								   HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="0,0,6,0"
								   Foreground="{DynamicResource PPSnActionButtonBrush}" FontSize="16">
							<TextBlock.LayoutTransform>
								<RotateTransform Angle="-90" />
							</TextBlock.LayoutTransform>
							<TextBlock.ContextMenu>
								<ContextMenu>
									<MenuItem Header="Name Kopieren" Command="{x:Static ApplicationCommands.Copy}" />
									<MenuItem Header="ObjektId kopieren" Command="{x:Static ApplicationCommands.Copy}" CommandParameter="todo" />
								</ContextMenu>
							</TextBlock.ContextMenu>
						</TextBlock>
						<ItemsControl Grid.Column="1" Grid.Row="1" ItemsSource="{TemplateBinding Views}" Focusable="False">
							<ItemsControl.ItemContainerStyle>
								<Style TargetType="{x:Type ContentPresenter}">
									<Setter Property="Margin" Value="0,6,0,0" />
								</Style>
							</ItemsControl.ItemContainerStyle>
							<ItemsControl.ItemTemplate>
								<DataTemplate DataType="ui:PpsWindowPaneObjectInfo">
									<Border x:Name="border" Height="48" BorderThickness="0,0,4,0" BorderBrush="Transparent">
										<ui:PpsButton Command="{x:Static ui:PpsWindowPaneCharmBarControl.ChangeContentCommand}"
													   CommandParameter="{Binding}"
													   ToolTip="{Binding Text, Mode=OneWay}"
													   GeometryName="{Binding Image, Mode=OneWay}"
													   GeometrySize="26"
													   Foreground="{DynamicResource PPSnActionButtonBrush}"
													   DisplayMode="Image" />
									</Border>
									<DataTemplate.Triggers>
										<DataTrigger Binding="{Binding IsActive}" Value="True">
											<Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource PPSnMarkerBrush}"/>
										</DataTrigger>
									</DataTemplate.Triggers>
								</DataTemplate>
							</ItemsControl.ItemTemplate>
						</ItemsControl>
					</Grid>
					<ControlTemplate.Triggers>
						<DataTrigger Binding="{Binding IsPaneVisible, RelativeSource={RelativeSource Self}}" Value="True">
							<DataTrigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
										</ObjectAnimationUsingKeyFrames>
										<DoubleAnimation Storyboard.TargetName="AnimatedBorder" Storyboard.TargetProperty="Width" To="1" DecelerationRatio=".6" Duration="0:00:.3"/>
									</Storyboard>
								</BeginStoryboard>
							</DataTrigger.EnterActions>
							<DataTrigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="AnimatedBorder" Storyboard.TargetProperty="Width" To="0" DecelerationRatio=".6" Duration="0:00:.3"/>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentBorder" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0:00:.3" Value="{x:Static Visibility.Collapsed}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</BeginStoryboard>
							</DataTrigger.ExitActions>
						</DataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="uic:PpsHelpPageViewer">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="uic:PpsHelpPageViewer">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="32" />
							<RowDefinition />
						</Grid.RowDefinitions>
						<ui:PpsButton Content="Bearbeiten"
									   Command="{x:Static ApplicationCommands.Open}"
									   HorizontalAlignment="Left"
									   DisplayMode="ImageAndText"
									   Margin="24,0,0,0"
									   FontSize="14" />
						<FlowDocumentScrollViewer Grid.Row="1" Margin="0,6,0,0" Document="{TemplateBinding Document}" VerticalScrollBarVisibility="Auto" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="uic:PpsObjectLinkEditor">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="uic:PpsObjectLinkEditor">
					<uic:PpsAttachmentsControl AttachmentsSource="{Binding Links}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<SolidColorBrush x:Key="PaneItemSeparatorBrush" Color="{DynamicResource PPSnAccentColor}" Opacity=".15" />

	<Style TargetType="main:PpsWindowPaneStrip">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="Focusable" Value="False" />
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<main:PpsWindowPaneStripPanel />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type main:PpsWindowPaneStrip}">
					<Grid Background="{DynamicResource PPSnWindowHeaderBrush}">
						<Grid.RowDefinitions>
							<RowDefinition />
							<RowDefinition Height="2" />
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition />
							<ColumnDefinition Width="224"/>
						</Grid.ColumnDefinitions>

						<Border Grid.ColumnSpan="3" Grid.Row="1" Background="{DynamicResource PPSnSideBarBackgroundBrush}"
								BorderBrush="{DynamicResource PPSnSeparatorBrush}" BorderThickness="0,1,0,0" />

						<Border x:Name="leftBorder" Width="38" BorderThickness="0,0,1,0" BorderBrush="{StaticResource PaneItemSeparatorBrush}" Background="Transparent">
							<Border.Tag>
								<ui:PpsWindowHitTest HitTest="2" />
							</Border.Tag>
						</Border>

						<DockPanel Grid.Column="1">
							<Border DockPanel.Dock="Left" Padding="0,0,32,0">
								<ItemsPresenter />
							</Border>
							<ToggleButton x:Name="showPaneListToggleButton" DockPanel.Dock="Left" Width="32" Margin="-32,0,0,0" Focusable="False">
								<ToggleButton.Style>
									<Style TargetType="{x:Type ToggleButton}">
										<Setter Property="Background" Value="Transparent" />
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="{x:Type ToggleButton}">
													<Grid Background="{TemplateBinding Background}">
														<ui:PpsGeometryImage GeometryName="chevronDownThin" GeometryCircled="False"
																			  Width="20" Height="20"
																			  Foreground="{DynamicResource PPSnWindowForegroundBrush}" />
													</Grid>
													<ControlTemplate.Triggers>
														<Trigger Property="IsMouseOver" Value="True">
															<Setter Property="Background" Value="{DynamicResource PPSnMouseOverBrush}" />
														</Trigger>
														<Trigger Property="IsPressed" Value="True">
															<Setter Property="Background" Value="{DynamicResource PPSnButtonPressedBrush}" />
														</Trigger>
													</ControlTemplate.Triggers>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</ToggleButton.Style>
							</ToggleButton>
							<Rectangle Fill="Transparent">
								<Rectangle.Tag>
									<ui:PpsWindowHitTest HitTest="2" />
								</Rectangle.Tag>
							</Rectangle>
						</DockPanel>

						<Rectangle Fill="Transparent" Grid.Column="2" Margin="0,0,108,0">
							<Rectangle.Tag>
								<ui:PpsWindowHitTest HitTest="2" />
							</Rectangle.Tag>
						</Rectangle>

						<ui:PpsButton Command="{x:Static ui:PpsWindow.MinimizeCommand}"
									   ToolTip="Minimieren"
									   DisplayMode="Image"
									   GeometryName="windowMinimize"
									   GeometrySize="24"
									   ImageOpacity="1"
									   Grid.Column="2"
									   Width="34"
									   Height="26"
									   HorizontalAlignment="Right"
									   VerticalAlignment="Top"
									   Margin="0,0,68,0" />
						<ui:PpsButton x:Name="buttonMaximize"
									   Command="{x:Static ui:PpsWindow.MaximizeCommand}"
									   ToolTip="Maximieren"
									   DisplayMode="Image"
									   GeometryName="windowMaximize"
									   GeometrySize="24"
									   ImageOpacity="1"
									   Grid.Column="2"
									   Width="34"
									   Height="26"
									   HorizontalAlignment="Right"
									   VerticalAlignment="Top"
									   Margin="0,0,34,0" />
						<ui:PpsButton Command="{x:Static ui:PpsWindow.CloseCommand}"
									   ToolTip="Schließen"
									   DisplayMode="Image"
									   GeometryName="windowClose"
									   GeometrySize="16"
									   ImageOpacity="1"
									   Grid.Column="2"
									   Width="34"
									   Height="26"
									   HorizontalAlignment="Right"
									   VerticalAlignment="Top" />

						<Popup PlacementTarget="{Binding ElementName=showPaneListToggleButton}" Placement="Left" HorizontalOffset="-32" VerticalOffset="38"
							   IsOpen="{Binding IsChecked, ElementName=showPaneListToggleButton}" MaxHeight="600" StaysOpen="False">
							<Popup.Resources>
								<Storyboard x:Key="ClosePopupStoryboard">
									<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsChecked" Storyboard.Target="{Binding ElementName=showPaneListToggleButton}">
										<DiscreteBooleanKeyFrame KeyTime="0:0:0" Value="False"/>
									</BooleanAnimationUsingKeyFrames>
								</Storyboard>
							</Popup.Resources>
							<ListBox ItemsSource="{Binding PaneHosts}" Background="{DynamicResource PPSnControlBackgroundBrush}" BorderThickness="1" BorderBrush="{DynamicResource PPSnControlNormalBorderBrush}">
								<ListBox.ItemTemplate>
									<DataTemplate DataType="{x:Type main:PpsWindowPaneHost}">
										<Button Command="{x:Static main:PpsMainWindow.GoToPaneCommand}" CommandParameter="{Binding}" TextBlock.FontSize="14">
											<Button.Content>
												<TextBlock Foreground="{DynamicResource PPSnWindowForegroundBrush}" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" MaxWidth="300">
													<Run Text="{Binding Title, Mode=OneWay,Converter={x:Static ui:PpsConverter.MultiToSingleLine}}"/>
													<Run Text=" "/>
													<Run Text="{Binding SubTitle, Mode=OneWay, Converter={x:Static ui:PpsConverter.MultiToSingleLine}}"/>
												</TextBlock>
											</Button.Content>
											<Button.Style>
												<Style TargetType="{x:Type Button}">
													<Setter Property="Template">
														<Setter.Value>
															<ControlTemplate TargetType="{x:Type Button}">
																<Grid Background="Transparent">
																	<Grid.ColumnDefinitions>
																		<ColumnDefinition Width="24" />
																		<ColumnDefinition />
																	</Grid.ColumnDefinitions>
																	<ui:PpsGeometryImage x:Name="CurrentPaneMarker" GeometryName="checked" GeometryCircled="False" Width="16" Visibility="Hidden"/>
																	<ContentPresenter Grid.Column="1" VerticalAlignment="Center" />
																</Grid>
																<ControlTemplate.Triggers>
																	<DataTrigger Binding="{Binding Control.IsVisible}" Value="True">
																		<Setter TargetName="CurrentPaneMarker" Property="Visibility" Value="Visible" />
																	</DataTrigger>
																</ControlTemplate.Triggers>
															</ControlTemplate>
														</Setter.Value>
													</Setter>
												</Style>
											</Button.Style>
											<Button.Triggers>
												<EventTrigger RoutedEvent="Button.Click">
													<BeginStoryboard Storyboard="{StaticResource ClosePopupStoryboard}" />
												</EventTrigger>
											</Button.Triggers>
										</Button>
									</DataTemplate>
								</ListBox.ItemTemplate>
								<ListBox.ItemContainerStyle>
									<Style TargetType="{x:Type ListBoxItem}">
										<Setter Property="Background" Value="Transparent" />
										<Setter Property="Focusable" Value="False" />
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="{x:Type ListBoxItem}">
													<Grid Height="36" Background="{TemplateBinding Background}">
														<Grid.ColumnDefinitions>
															<ColumnDefinition />
															<ColumnDefinition Width="32" />
														</Grid.ColumnDefinitions>
														<ContentPresenter x:Name="content" />
														<ui:PpsButton x:Name="closeButton"
																	   Grid.Column="1"
																	   Command="{x:Static main:PpsMainWindow.ClosePaneCommand}"
																	   CommandParameter="{TemplateBinding Content}"
																	   Visibility="Hidden"
																	   Foreground="{DynamicResource PPSnWindowForegroundBrush}"
																	   GeometryName="closePane"
																	   DisplayMode="Image"
																	   GeometrySize="24"
																	   ImageOpacity="1">
															<Button.Triggers>
																<EventTrigger RoutedEvent="Button.Click">
																	<BeginStoryboard Storyboard="{StaticResource ClosePopupStoryboard}" />
																</EventTrigger>
															</Button.Triggers>
														</ui:PpsButton>
													</Grid>
													<ControlTemplate.Triggers>
														<Trigger Property="IsMouseOver" Value="True">
															<Setter Property="Background" Value="{DynamicResource PPSnMouseOverBrush}" />
														</Trigger>
														<MultiTrigger>
															<MultiTrigger.Conditions>
																<Condition Property="IsMouseOver" Value="True" />
																<Condition SourceName="closeButton" Property="IsEnabled" Value="True" />
															</MultiTrigger.Conditions>
															<Setter TargetName="closeButton" Property="Visibility" Value="Visible" />
														</MultiTrigger>
													</ControlTemplate.Triggers>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</ListBox.ItemContainerStyle>
							</ListBox>
						</Popup>
					</Grid>
					<ControlTemplate.Triggers>
						<DataTrigger Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}" Value="Maximized" >
							<Setter TargetName="buttonMaximize" Property="GeometryName" Value="windowRestore" />
							<Setter TargetName="buttonMaximize" Property="ToolTip" Value="Verkleinern" />
							<Setter TargetName="leftBorder" Property="Visibility" Value="Collapsed" />
						</DataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<Style TargetType="main:PpsWindowPaneStripItem">
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type main:PpsWindowPaneStripItem}">
					<Border x:Name="itemBorder" BorderBrush="{StaticResource PaneItemSeparatorBrush}" BorderThickness="0,0,1,0" Margin="0,0,0,-1">
						<Grid Background="Transparent" TextBlock.Foreground="{DynamicResource PPSnWindowForegroundBrush}">
							<Grid.ColumnDefinitions>
								<ColumnDefinition />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<ContentPresenter Margin="0,0,2,0" />
							<TextBlock x:Name="dirtyText" Text="*" HorizontalAlignment="Right" VerticalAlignment="Center" Visibility="Hidden" />
							<ui:PpsButton x:Name="closeButton"
										   Grid.Column="1"
										   Command="{x:Static main:PpsMainWindow.ClosePaneCommand}"
										   CommandParameter="{TemplateBinding Content}"
										   Width="32"
										   Visibility="Hidden"
										   Foreground="{DynamicResource PPSnWindowForegroundBrush}"
										   GeometryName="closePane"
										   DisplayMode="Image"
										   GeometrySize="24"
										   ImageOpacity="1" />
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsSelected" Value="True">
							<Setter TargetName="itemBorder" Property="Background" Value="{DynamicResource PPSnSideBarBackgroundBrush}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="True" />
								<Condition SourceName="closeButton" Property="IsEnabled" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="closeButton" Property="Visibility" Value="Visible" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="False" />
								<Condition Property="IsMouseOver" Value="True" />
								<Condition SourceName="closeButton" Property="IsEnabled" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="closeButton" Property="Visibility" Value="Visible" />
						</MultiTrigger>
						<DataTrigger Binding="{Binding CurrentPane.IsDirty}" Value="True">
							<Setter TargetName="dirtyText" Property="Visibility" Value="Visible" />
						</DataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="uic:PpsBarcodePopup">
		<Setter Property="StaysOpen" Value="False" />
		<Setter Property="Child">
			<Setter.Value>
				<ui:PpsPopupContent GeometryName="barcodeScan" Header="Barcode">
					<Grid Margin="16" IsSharedSizeScope="True">
						<Grid.RowDefinitions>
							<RowDefinition />
							<RowDefinition Height="23" />
						</Grid.RowDefinitions>
						<ItemsControl Grid.ColumnSpan="2" ItemsSource="{Binding Barcodes}" Focusable="False">
							<ItemsControl.ItemTemplate>
								<DataTemplate>
									<Grid Height="29">
										<Grid.ColumnDefinitions>
											<ColumnDefinition SharedSizeGroup="column1" />
											<ColumnDefinition SharedSizeGroup="column2" />
										</Grid.ColumnDefinitions>
										<ui:PpsButton x:Name="sendBarcodeButton" Grid.Column="0" Margin="0,0,6,6" Content="{Binding}" Command="{x:Static uic:PpsBarcodePopup.SendBarcodeCommand}" CommandParameter="{Binding}" />
										<ui:PpsButton Grid.Column="1" Margin="0,0,0,6" Content="x" Command="{x:Static uic:PpsBarcodePopup.RemoveBarcodeCommand}" CommandParameter="{Binding}" />
									</Grid>
								</DataTemplate>
							</ItemsControl.ItemTemplate>
						</ItemsControl>
						<Grid Grid.Row="1">
							<Grid.ColumnDefinitions>
								<ColumnDefinition SharedSizeGroup="column1" />
								<ColumnDefinition Width="60" SharedSizeGroup="column2" />
							</Grid.ColumnDefinitions>
							<ui:PpsTextBox x:Name="barcodeText" MinWidth="150" Margin="0,0,6,0" />
							<ui:PpsButton x:Name="sendBarcodeButton" Grid.Column="1" Content="Send" Command="{x:Static uic:PpsBarcodePopup.SendBarcodeCommand}" CommandParameter="{Binding Source={x:Reference barcodeText}}" />
						</Grid>
					</Grid>
				</ui:PpsPopupContent>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="uic:PpsBarcodeState">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="uic:PpsBarcodeState">
					<Grid Background="Transparent" ToolTip="{Binding LastSeenDevice}">
						<ui:PpsGeometryImage GeometryName="scannerActive" Padding="6" Foreground="{DynamicResource PPSnWindowBackgroundBrush}">
							<ui:PpsGeometryImage.Visibility>
								<Binding Path="IsActive" Converter="{x:Static ui:PpsConverter.Visibility}">
									<Binding.ConverterParameter>
										<ui:VisibilityConverterParameter TrueValue="Visible" FalseValue="Hidden" />
									</Binding.ConverterParameter>
								</Binding>
							</ui:PpsGeometryImage.Visibility>
						</ui:PpsGeometryImage>
						<ui:PpsGeometryImage GeometryName="scannerInActive" Padding="6" Foreground="{DynamicResource PPSnWindowBackgroundBrush}">
							<ui:PpsGeometryImage.Visibility>
								<Binding Path="IsActive" Converter="{x:Static ui:PpsConverter.Visibility}">
									<Binding.ConverterParameter>
										<ui:VisibilityConverterParameter TrueValue="Hidden" FalseValue="Visible" />
									</Binding.ConverterParameter>
								</Binding>
							</ui:PpsGeometryImage.Visibility>
						</ui:PpsGeometryImage>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="uic:PpsConnectionState">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="uic:PpsConnectionState">
                    <Grid x:Name="grid" Background="Transparent" ToolTip="Nicht verbunden">
                        <ui:PpsGeometryImage x:Name="image"
                                             GeometryName="serverUnConnected"
                                             Padding="6"
                                             Background="Transparent"
                                             Foreground="{DynamicResource PPSnWindowBackgroundBrush}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding ConnectionState}" Value="Connecting">
                            <Setter TargetName="image" Property="GeometryName" Value="serverConnecting" />
                            <Setter TargetName="grid" Property="ToolTip" Value="Verbinden..." />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ConnectionState}" Value="Connected">
                            <Setter TargetName="image" Property="GeometryName" Value="serverConnected" />
                            <Setter TargetName="grid" Property="ToolTip" Value="Verbunden" />
                        </DataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<DataTemplate x:Key="progressStackTemplate">
		<Border Background="Black" Opacity="0.8">
			<Label Content="{Binding CurentText}" />
		</Border>
	</DataTemplate>
</ResourceDictionary>
