<!--
Licensed under the EUPL, Version 1.1 or - as soon they will be approved by the
European Commission - subsequent versions of the EUPL(the "Licence"); You may
not use this work except in compliance with the Licence.

You may obtain a copy of the Licence at:
http://ec.europa.eu/idabc/eupl

Unless required by applicable law or agreed to in writing, software distributed
under the Licence is distributed on an "AS IS" basis, WITHOUT WARRANTIES OR
CONDITIONS OF ANY KIND, either express or implied. See the Licence for the
specific language governing permissions and limitations under the Licence.
-->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:ui="clr-namespace:TecWare.PPSn.UI"
					xmlns:pps="clr-namespace:TecWare.PPSn.Controls">
	<Style TargetType="{x:Type pps:PpsGeometryImage}">
		<Setter Property="IsEnabled" Value="False" />
		<Setter Property="IsHitTestVisible" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type pps:PpsGeometryImage}">
					<Grid Background="{TemplateBinding Background}">
						<Ellipse x:Name="Circle"
								 Stroke="{TemplateBinding Foreground}"
								 StrokeThickness="1.25"
								 Fill="{TemplateBinding Fill}" />
						
						<Viewbox x:Name="ImageBox"
								 Margin="{TemplateBinding GeometrySpacing}">
							
							<Canvas Width="24" Height="24" Margin="{TemplateBinding Padding}" UseLayoutRounding="True">
								<Path x:Name="Geometry1"
									  Data="{TemplateBinding ForegroundGeometry}"
									  Fill="{TemplateBinding Foreground,Converter={x:Static ui:PpsConverter.DefaultBrush},ConverterParameter=PPSnForegroundBrush}" />
								<Path x:Name="Geometry2"
									  Data="{TemplateBinding AccentForegroundGeometry}"
									  Fill="{TemplateBinding AccentForeground,Converter={x:Static ui:PpsConverter.DefaultBrush},ConverterParameter=PPSnAccentForegroundBrush}" />
							</Canvas>
						</Viewbox>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="GeometryCircled" Value="False">
							<Setter TargetName="Circle" Property="Visibility" Value="Hidden" />
						</Trigger>
						<Trigger Property="HasGeometry" Value="False">
							<Setter TargetName="Geometry1" Property="Visibility" Value="Hidden" />
						</Trigger>
						<Trigger Property="HasAccentGeometry" Value="False">
							<Setter TargetName="Geometry2" Property="Visibility" Value="Hidden" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>