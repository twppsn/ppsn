<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:pps="clr-namespace:TecWare.PPSn.Controls">
	<Style TargetType="{x:Type ContextMenu}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="Foreground" Value="{DynamicResource PPSnWindowForegroundBrush}" />
		<!--<Setter Property="Background" Value="{DynamicResource PPSnSideBarBackgroundBrush}" />-->
		<Setter Property="Background" Value="Yellow" />
		<Setter Property="BorderBrush" Value="{DynamicResource PPSnControlNormalBorderBrush}" />
		<Setter Property="BorderThickness" Value="1,1,1,1" />
		<Setter Property="Grid.IsSharedSizeScope" Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ContextMenu}">
					<Border x:Name="MenuBorder" SnapsToDevicePixels="True" MinWidth="132" Padding="2,2,2,2" Margin="0,0,6,6"
							Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" >
						<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
						<Border.Effect>
							<DropShadowEffect Color="{DynamicResource PPSnAccentColor}" BlurRadius="5" Opacity=".4" ShadowDepth="2" />
						</Border.Effect>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="HasItems" Value="False">
							<Setter Property="Visibility" Value="Collapsed" />
						</Trigger>
						<Trigger Property="HasDropShadow" Value="False">
							<Setter TargetName="MenuBorder" Property="Margin" Value="0,0,0,0" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Separator}">
					<!--<Rectangle Height="1" Margin="30,2,0,2" StrokeThickness="0" Fill="{DynamicResource PPSnSeparatorBrush}" />-->
					<Rectangle Height="1" Margin="30,2,0,2" StrokeThickness="0" Fill="Blue" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" TargetType="{x:Type MenuItem}">
		<Border x:Name="Border" Background="Transparent">
			<Grid ShowGridLines="True">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="32" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
					<ColumnDefinition Width="16" />
				</Grid.ColumnDefinitions>

				<Border x:Name="CheckBox" Width="18" Height="18" Visibility="Hidden" Background="{DynamicResource PPSnSeparatorBrush}">
					<Viewbox x:Name="CheckMark" Visibility="Hidden">
						<Canvas Width="24" Height="24">
							<Path Data="M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z" Fill="{DynamicResource PPSnWindowForegroundBrush}" />
						</Canvas>
					</Viewbox>
				</Border>
				<ContentPresenter x:Name="IconBox" ContentSource="Icon" Height="18" Width="18" />
				<ContentPresenter Grid.Column="1" ContentSource="Header" RecognizesAccessKey="True" Margin="0,4,0,4" />
				<TextBlock Grid.Column="2" Text="{TemplateBinding InputGestureText}" Margin="0,4,0,4" />
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="ButtonBase.Command" Value="{x:Null}" />
			<Trigger Property="Icon" Value="{x:Null}">
				<Setter TargetName="IconBox" Property="Visibility" Value="Hidden" />
			</Trigger>
			<Trigger Property="IsCheckable" Value="true">
				<Setter TargetName="CheckBox" Property="Visibility" Value="Visible" />
				<Setter TargetName="IconBox" Property="Visibility" Value="Hidden" />
			</Trigger>
			<Trigger Property="IsChecked" Value="true">
				<Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
			</Trigger>
			<Trigger Property="IsHighlighted" Value="true">
				<Setter TargetName="Border" Property="Background" Value="{DynamicResource PPSnHighlightedBrush}" />
			</Trigger>
			<Trigger Property="IsPressed" Value="True">
				<Setter TargetName="Border" Property="Background" Value="{DynamicResource PPSnPressedBrush}" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Foreground" Value="{DynamicResource PPSnWindowDisabledForegroundBrush}" />
				<Setter TargetName="IconBox" Property="Opacity" Value=".33" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" TargetType="{x:Type MenuItem}">
		<Border x:Name="Border" Background="Transparent">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="32" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
					<ColumnDefinition Width="16" />
				</Grid.ColumnDefinitions>
				<ContentPresenter x:Name="IconBox" ContentSource="Icon" Height="16" Width="16" />
				<ContentPresenter Grid.Column="1" ContentSource="Header" RecognizesAccessKey="True" Margin="0,4,0,4" />
				<TextBlock Grid.Column="2" Text="{TemplateBinding InputGestureText}" Margin="24,4,0,4" />
				<Path Grid.Column="3" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M 0 0 L 0 7 L 4 3.5 Z" Fill="{DynamicResource PPSnWindowForegroundBrush}" />
				<Popup x:Name="Popup" IsOpen="{TemplateBinding IsSubmenuOpen}" PopupAnimation="Fade" Placement="Left" HorizontalOffset="4" Focusable="False" AllowsTransparency="True">
					<Border x:Name="SubmenuBorder" SnapsToDevicePixels="True" MinWidth="132" Padding="2,2,2,2" Margin="0,0,6,6"
							Background="{Binding Background,RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}"
							BorderThickness="{Binding BorderThickness,RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}" 
							BorderBrush="{Binding BorderBrush,RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}">
						<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
						<Border.Effect>
							<DropShadowEffect Color="{DynamicResource PPSnAccentColor}" BlurRadius="5" Opacity=".4" ShadowDepth="2" />
						</Border.Effect>
					</Border>
				</Popup>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="Icon" Value="{x:Null}">
				<Setter TargetName="IconBox" Property="Visibility" Value="Hidden" />
			</Trigger>
			<Trigger Property="IsHighlighted" Value="true">
				<Setter TargetName="Border" Property="Background" Value="{DynamicResource PPSnHighlightedBrush}" />
			</Trigger>
			<DataTrigger Binding="{Binding Path=HasDropShadow, RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}" Value="False">
				<Setter TargetName="SubmenuBorder" Property="Margin" Value="0,0,0,0" />
			</DataTrigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Foreground" Value="{DynamicResource PPSnWindowDisabledForegroundBrush}" />
				<Setter TargetName="IconBox" Property="Opacity" Value=".33" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<Style TargetType="{x:Type MenuItem}">
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Style.Triggers>
			<Trigger Property="Role" Value="SubmenuItem">
				<Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}" />
			</Trigger>
			<Trigger Property="Role" Value="SubmenuHeader">
				<Setter Property="Template" Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}" />
			</Trigger>
		</Style.Triggers>
	</Style>
</ResourceDictionary>