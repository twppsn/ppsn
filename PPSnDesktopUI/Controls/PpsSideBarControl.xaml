<!--
Licensed under the EUPL, Version 1.1 or - as soon they will be approved by the
European Commission - subsequent versions of the EUPL(the "Licence"); You may
not use this work except in compliance with the Licence.

You may obtain a copy of the Licence at:
http://ec.europa.eu/idabc/eupl

Unless required by applicable law or agreed to in writing, software distributed
under the Licence is distributed on an "AS IS" basis, WITHOUT WARRANTIES OR
CONDITIONS OF ANY KIND, either express or implied. See the Licence for the
specific language governing permissions and limitations under the Licence.
-->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:sys="clr-namespace:System;assembly=mscorlib"
					xmlns:uiO="clr-namespace:TecWare.PPSn.UI;assembly=PPSn.Desktop.UI"
					xmlns:pps="clr-namespace:TecWare.PPSn.Controls">

	<sys:Double x:Key="SideBarIncreasedWidth">230</sys:Double>
	<sys:Double x:Key="SideBarShrinkedWidth">48</sys:Double>

	<Style TargetType="{x:Type pps:PpsSideBarControl}">
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Padding" Value="32,16,6,16" />
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<StackPanel />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type pps:PpsSideBarControl}">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="auto" />
							<ColumnDefinition />
						</Grid.ColumnDefinitions>
						<Border	x:Name="SideBarBorder" Width="{StaticResource SideBarIncreasedWidth}" HorizontalAlignment="Left" Background="{DynamicResource PPSnSideBarBackgroundBrush}">
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition />
								</Grid.RowDefinitions>
								<pps:PpsButton x:Name="ShrinkButton"
											   Command="{x:Static NavigationCommands.Zoom}"
											   DisplayMode="Image"
											   GeometryName="menu"
											   GeometrySize="24"
											   ImageOpacity="1"
											   Width="32"
											   Height="32"
											   HorizontalAlignment="Left"
											   Margin="8,6,0,0"
											   Foreground="{DynamicResource PPSnWindowForegroundBrush}"
											   ToolTip="Verkleinern"
											   Focusable="False" />
								<ItemsPresenter x:Name="Presenter" Grid.Row="1" />
							</Grid>
						</Border>
						<ContentPresenter Grid.Column="1"
										  Margin="{TemplateBinding Padding}"
										  Content="{TemplateBinding SelectedContent}" 
										  ContentTemplate="{TemplateBinding SelectedContentTemplate}" 
										  ContentTemplateSelector="{TemplateBinding SelectedContentTemplateSelector}"
										  ContentStringFormat="{TemplateBinding SelectedContentStringFormat}" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="AllowShrink" Value="False">
							<Setter TargetName="ShrinkButton" Property="Visibility" Value="Collapsed" />
							<Setter TargetName="Presenter" Property="Margin" Value="0,24,0,0" />
						</Trigger>
						<Trigger Property="IsShrunken" Value="True">
							<Setter TargetName="ShrinkButton" Property="ToolTip" Value="Erweitern" />
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="SideBarBorder" Storyboard.TargetProperty="(Border.Width)"
														 To="{StaticResource SideBarShrinkedWidth}" AccelerationRatio=".4" Duration="0:00:.2"/>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="SideBarBorder" Storyboard.TargetProperty="(Border.Width)"
														 To="{StaticResource SideBarIncreasedWidth}" DecelerationRatio=".4" Duration="0:00:.3"/>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="pps:PpsSideBarGroup">
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type pps:PpsSideBarGroup}">
					<StackPanel>
						<Grid x:Name="HeaderGrid" Height="36" Background="Transparent">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="15" />
								<ColumnDefinition />
								<ColumnDefinition Width="8" />
							</Grid.ColumnDefinitions>
							<Border x:Name="selectionMarker"
									Width="4"
									HorizontalAlignment="Left"
									Background="{DynamicResource PPSnMarkerBrush}"
									Visibility="Hidden" />
							<ContentPresenter Grid.Column="1"
											  Content="{TemplateBinding Header}" 
											  ContentTemplate="{TemplateBinding HeaderTemplate}" 
											  ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" 
											  ContentStringFormat="{TemplateBinding HeaderStringFormat}"
											  TextElement.FontSize="14"
											  TextElement.Foreground="{DynamicResource PPSnWindowForegroundBrush}"
											  Margin="{Binding IndentationLevel,RelativeSource={RelativeSource TemplatedParent},Mode=OneTime,Converter={x:Static uiO:PpsConverter.Multiply},ConverterParameter='16,0,0,0'}"
											  VerticalAlignment="Center" />
							<!--custom visual focus-->
							<Rectangle x:Name="focusRect"
									   Grid.ColumnSpan="3"
									   Stroke="{DynamicResource PPSnMarkerBrush}"
									   StrokeThickness="1"
									   StrokeDashArray="2 1"
									   RenderOptions.EdgeMode="Aliased"
									   SnapsToDevicePixels="True"
									   Opacity="0" />
						</Grid>
						<ItemsPresenter />
					</StackPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="IsTopSelected" Value="True">
							<Setter TargetName="selectionMarker" Property="Visibility" Value="Visible" />
						</Trigger>
						<Trigger Property="IsMouseOver" SourceName="HeaderGrid" Value="True">
							<Setter Property="Background" TargetName="HeaderGrid" Value="{DynamicResource PPSnMouseOverBrush}" />
						</Trigger>
						<Trigger Property="IsFocused" Value="True">
							<Setter TargetName="focusRect" Property="Opacity" Value="1" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="pps:PpsSideBarPanel">
		<Setter Property="FocusVisualStyle" Value="{DynamicResource PpsFocusVisualStyle}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type pps:PpsSideBarPanel}">
					<Grid x:Name="HeaderGrid" Height="36" Background="Transparent">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="15" />
							<ColumnDefinition />
							<ColumnDefinition Width="8" />
						</Grid.ColumnDefinitions>
						<Border x:Name="selectionMarker"
								Width="4"
								HorizontalAlignment="Left"
								Background="{DynamicResource PPSnMarkerBrush}"
								Visibility="Hidden" />
						<ContentPresenter Grid.Column="1"
										  Content="{TemplateBinding Header}" 
										  ContentTemplate="{TemplateBinding HeaderTemplate}"  			  
										  ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" 
										  ContentStringFormat="{TemplateBinding HeaderStringFormat}"
										  TextElement.FontSize="14"
										  TextElement.Foreground="{DynamicResource PPSnWindowForegroundBrush}"
										  Margin="{Binding IndentationLevel,RelativeSource={RelativeSource TemplatedParent}, Mode=OneTime,Converter={x:Static uiO:PpsConverter.Multiply},ConverterParameter='16,0,0,0'}"
										  VerticalAlignment="Center" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsSelected" Value="True">
							<Setter TargetName="selectionMarker" Property="Visibility" Value="Visible" />
						</Trigger>
						<Trigger Property="IsMouseOver" SourceName="HeaderGrid" Value="True">
							<Setter Property="Background" TargetName="HeaderGrid" Value="{DynamicResource PPSnMouseOverBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="pps:PpsSideBarPanelFilter">
		<Setter Property="FocusVisualStyle" Value="{DynamicResource PpsFocusVisualStyle}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type pps:PpsSideBarPanelFilter}">
					<Grid x:Name="HeaderGrid" Height="36" Background="Transparent">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="15" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition />
							<ColumnDefinition Width="8" />
						</Grid.ColumnDefinitions>
						<Rectangle x:Name="SelectionMarker"
								   Width="4"
								   HorizontalAlignment="Left"
								   StrokeThickness="0"
								   Fill="{DynamicResource PPSnMarkerBrush}"
								   SnapsToDevicePixels="True"
								   RenderOptions.EdgeMode="Aliased"
								   Opacity="0" />
						<pps:PpsGeometryImage x:Name="ImageBox" Grid.Column="1"
											  GeometryName="{TemplateBinding Image}"
											  GeometryCircled="false"
											  Width="18"
											  Margin="0,0,15,0"
											  Opacity=".75"
											  Foreground="{DynamicResource PPSnActionButtonBrush}" />
						<ContentPresenter x:Name="Presenter"
										  Grid.Column="2"
										  Content="{TemplateBinding Header}" 
										  ContentTemplate="{TemplateBinding HeaderTemplate}"  			  
										  ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" 
										  ContentStringFormat="{TemplateBinding HeaderStringFormat}"
										  TextElement.FontSize="14"
										  TextElement.Foreground="{DynamicResource PPSnWindowForegroundBrush}"
										  Margin="{Binding IndentationLevel,RelativeSource={RelativeSource TemplatedParent},Converter={x:Static uiO:PpsConverter.Multiply},ConverterParameter='16,0,0,0'}"
										  VerticalAlignment="Center" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsSelected" Value="True">
							<Setter TargetName="SelectionMarker" Property="Opacity" Value="1" />
						</Trigger>
						<Trigger SourceName="HeaderGrid" Property="IsMouseOver" Value="True">
							<Setter TargetName="HeaderGrid" Property="Background" Value="{DynamicResource PPSnMouseOverBrush}" />
							<Setter TargetName="ImageBox" Property="Opacity" Value="1" />
						</Trigger>
						<Trigger Property="HasImage" Value="False">
							<Setter TargetName="ImageBox" Property="Visibility" Value="Collapsed" />
						</Trigger>
						<DataTrigger Binding="{Binding IsShrunken, RelativeSource={RelativeSource AncestorType={x:Type pps:PpsSideBarControl}}}" Value="True">
							<Setter TargetName="HeaderGrid" Property="ToolTip" Value="{Binding Content, ElementName=Presenter}" />
						</DataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="{x:Static pps:PpsSideBarItemsBase.PpsSideBarSeparator}" TargetType="{x:Type Separator}">
		<Setter Property="Foreground" Value="{DynamicResource PPSnSeperatorBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Separator}">
					<Rectangle Height="1"
							   Margin="16,3,16,3"
							   StrokeThickness="0"
							   Fill="{TemplateBinding Foreground}"
							   RenderOptions.EdgeMode="Aliased"
							   SnapsToDevicePixels="True" />
					<ControlTemplate.Triggers>
						<DataTrigger Binding="{Binding IsShrunken, RelativeSource={RelativeSource AncestorType={x:Type pps:PpsSideBarControl}}}" Value="True">
							<Setter Property="Foreground" Value="Transparent" />
						</DataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


</ResourceDictionary>