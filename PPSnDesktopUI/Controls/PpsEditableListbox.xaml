<!--
Licensed under the EUPL, Version 1.1 or - as soon they will be approved by the
European Commission - subsequent versions of the EUPL(the "Licence"); You may
not use this work except in compliance with the Licence.

You may obtain a copy of the Licence at:
http://ec.europa.eu/idabc/eupl

Unless required by applicable law or agreed to in writing, software distributed
under the Licence is distributed on an "AS IS" basis, WITHOUT WARRANTIES OR
CONDITIONS OF ANY KIND, either express or implied. See the Licence for the
specific language governing permissions and limitations under the Licence.
-->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:pps="clr-namespace:TecWare.PPSn.Controls">

	<Style TargetType="{x:Type pps:PpsEditableListbox}">
		<Setter Property="Foreground" Value="{DynamicResource PPSnWindowForegroundBrush}" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="Padding" Value="0" />
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type pps:PpsEditableListbox}">
					<Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"
							Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
						<pps:PpsScrollViewer Focusable="False" Padding="{TemplateBinding Padding}" HorizontalScrollBarVisibility="Disabled">
							<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
						</pps:PpsScrollViewer>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type pps:PpsEditableListboxItem}">
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Stretch" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type pps:PpsEditableListboxItem}">
					<Grid Background="Transparent">
						<Grid.ColumnDefinitions>
							<ColumnDefinition />
							<ColumnDefinition Width="50" />
						</Grid.ColumnDefinitions>
						<ContentPresenter Grid.Column="0"
										  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
										  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
						<pps:PpsButton x:Name="appendButton" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="6,0"
									   DisplayMode="Transparent" GeometrySize="32" GeometryName="plus"
									   Command="{x:Static pps:PpsEditableListbox.AppendNewItemCommand}"
									   CommandParameter="{Binding}"
									   Visibility="Hidden" />
						<pps:PpsButton x:Name="removeButton" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="6,0"
									   DisplayMode="Transparent" GeometrySize="32" GeometryName="delete"
									   Command="{x:Static pps:PpsEditableListbox.RemoveItemCommand}"
									   CommandParameter="{Binding}"
									   Visibility="Hidden" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsNewItem" Value="True">
							<Setter TargetName="appendButton" Property="Visibility" Value="Visible" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsNewItem" Value="False" />
								<Condition Property="IsKeyboardFocusWithin" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="removeButton" Property="Visibility" Value="Visible"/>
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsKeyboardFocusWithin" Value="True">
				<Setter Property="IsSelected" Value="True" />
			</Trigger>
		</Style.Triggers>
	</Style>

</ResourceDictionary>