<!--
Licensed under the EUPL, Version 1.1 or - as soon they will be approved by the
European Commission - subsequent versions of the EUPL(the "Licence"); You may
not use this work except in compliance with the Licence.

You may obtain a copy of the Licence at:
http://ec.europa.eu/idabc/eupl

Unless required by applicable law or agreed to in writing, software distributed
under the Licence is distributed on an "AS IS" basis, WITHOUT WARRANTIES OR
CONDITIONS OF ANY KIND, either express or implied. See the Licence for the
specific language governing permissions and limitations under the Licence.
-->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:uiO="clr-namespace:TecWare.PPSn.UI;assembly=PPSn.Desktop.UI"
					xmlns:uiC="clr-namespace:TecWare.PPSn.Controls">

	<Style x:Key="PpsListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
		<Setter Property="Foreground" Value="{DynamicResource PPSnWindowForegroundBrush}" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBoxItem}">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition />
							<RowDefinition Height="2" />
						</Grid.RowDefinitions>
						<Border Background="{TemplateBinding Background}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
							<ContentPresenter Margin="6,1"/>
						</Border>
						<!--custom visual focus-->
						<Rectangle x:Name="focusRect" Stroke="{DynamicResource PPSnMarkerBrush}" StrokeThickness="1" RenderOptions.EdgeMode="Aliased" Opacity="0" />
						<!--ItemSeparator-->
						<Rectangle Grid.Row="1" Margin="6,0" StrokeThickness="0" Fill="Transparent" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsFocused" Value="True">
							<Setter TargetName="focusRect" Property="Opacity" Value="1" />
						</Trigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True" />
								<Condition Binding="{Binding ShowSelectionMode, RelativeSource={RelativeSource AncestorType={x:Type uiC:PpsListBox}}}" Value="Always" />
							</MultiDataTrigger.Conditions>
							<Setter Property="Background" Value="{DynamicResource PPSnSelectionBarBrush}" />
						</MultiDataTrigger>
						<MultiDataTrigger>
							<MultiDataTrigger.Conditions>
								<Condition Binding="{Binding IsSelected, RelativeSource={RelativeSource Self}}" Value="True" />
								<Condition Binding="{Binding IsFocused, RelativeSource={RelativeSource Self}}" Value="True" />
								<Condition Binding="{Binding ShowSelectionMode, RelativeSource={RelativeSource AncestorType={x:Type uiC:PpsListBox}}}" Value="WhenFocused" />
							</MultiDataTrigger.Conditions>
							<Setter Property="Background" Value="{DynamicResource PPSnSelectionBarBrush}" />
						</MultiDataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type uiC:PpsListBox}">
		<Setter Property="ItemContainerStyle" Value="{StaticResource PpsListBoxItemStyle}" />
		<Setter Property="Foreground" Value="{DynamicResource PPSnWindowForegroundBrush}" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="BorderBrush" Value="{DynamicResource PPSnControlNormalBorderBrush}" />
		<Setter Property="Padding" Value="0" />
		<Setter Property="Focusable" Value="False" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type uiC:PpsListBox}">
					<Border x:Name="border" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"
							Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>
							<Border x:Name="PART_Header" Grid.Row="0" BorderThickness="1" BorderBrush="{DynamicResource PPSnControlNormalBorderBrush}" Visibility="Collapsed">
								<uiC:PpsListColumnHeader Margin="4,0" />
							</Border>
							
							<uiC:PpsScrollViewer Grid.Row="1"
												 CanContentScroll="True"
												 HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
												 VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
												 Focusable="False">
								<ItemsPresenter />
							</uiC:PpsScrollViewer>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	
	<DataTemplate x:Key="{x:Type uiC:PpsListColumns}">
		<uiC:PpsListColumnRow />
	</DataTemplate>

	<Style TargetType="{x:Type uiC:PpsListColumnHeaderCell}">
		<Setter Property="Foreground" Value="{DynamicResource PPSnWindowForegroundBrush}" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="{DynamicResource PPSnControlNormalBorderBrush}" />
		<Setter Property="Padding" Value="2" />
		<Setter Property="Focusable" Value="False" />
		<Setter Property="SnapsToDevicePixels" Value="True" />

		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type uiC:PpsListColumnHeaderCell}">
					<Border x:Name="border" BorderThickness="0,0,1,0" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
						<ContentPresenter Content="{Binding Header}" HorizontalAlignment="{Binding DataContext.HorizontalAlignment,ElementName=border}" VerticalAlignment="{Binding DataContext.VerticalAlignment,ElementName=border}" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>