<!--
Licensed under the EU, Version 1.1 or - as soon they will be approved by the
European Commission - subsequent versions of the EUPL(the "Licence"); You may
not use this work except in compliance with the Licence.

You may obtain a copy of the Licence at:
http://ec.europa.eu/idabc/eupl

Unless required by applicable law or agreed to in writing, software distributed
under the Licence is distributed on an "AS IS" basis, WITHOUT WARRANTIES OR
CONDITIONS OF ANY KIND, either express or implied. See the Licence for the
specific language governing permissions and limitations under the Licence.
-->
<uiC:PpsWindowPaneControl x:Class="TecWare.PPSn.UI.PpsPicturePane"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
		     xmlns:cm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
             xmlns:ui="clr-namespace:TecWare.PPSn.UI"
			 xmlns:uiC="clr-namespace:TecWare.PPSn.Controls"
			 xmlns:sys="clr-namespace:System;assembly=mscorlib"
			 mc:Ignorable="d"
			 x:Name="imagePane"
			 Title="Bild"
			 Image="image"
             d:DesignHeight="300" d:DesignWidth="300">
	<uiC:PpsWindowPaneControl.Resources>
		<CollectionViewSource x:Key="shapeFactories" Source="{ui:PpsCollectTypedResources {x:Type ui:PpsShapeResourceKey},ResourceType={x:Type uiC:IPpsShapeFactory}}">
			<CollectionViewSource.GroupDescriptions>
				<PropertyGroupDescription PropertyName="Order" Converter="{x:Static ui:PpsCommandOrder.GetGroup}" />
			</CollectionViewSource.GroupDescriptions>
			<CollectionViewSource.SortDescriptions>
				<cm:SortDescription PropertyName="Order" />
			</CollectionViewSource.SortDescriptions>
		</CollectionViewSource>
		<CollectionViewSource x:Key="colorTable" Source="{ui:PpsCollectTypedResources {x:Type ui:PpsColorResourceKey},ResourceType={x:Type Color},Comparer={x:Static ui:PpsComparer.Colors}}" />
		<CollectionViewSource x:Key="thicknessTable" Source="{ui:PpsCollectTypedResources {x:Type ui:PpsThicknesResourceKey},ResourceType={x:Type Thickness}}" />
	</uiC:PpsWindowPaneControl.Resources>
	<uiC:PpsWindowPaneControl.Commands>
		<!--<ui:PpsUISplitCommandButton DisplayText="Neu" Image="plus" Mode="Dropdown">
			<ui:PpsUISplitCommandButton.Popup>
				<uiC:PpsPopup StaysOpen="False" RouteEvents="True">
					<Grid Background="Gray">
						<Grid.RowDefinitions>
							<RowDefinition />
							<RowDefinition />
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition />
							<ColumnDefinition />
							<ColumnDefinition />
						</Grid.ColumnDefinitions>
						<StackPanel Grid.Row="0" Orientation="Horizontal">
							<Button Content="MOVE" Command="{x:Static ApplicationCommands.New}" CommandParameter="{x:Null}" />
						</StackPanel>
						<ItemsControl Grid.Row="1" ItemsSource="{Binding Source={StaticResource shapeFactories}}">
							<ItemsControl.ItemTemplate>
								<DataTemplate>
									<Button ToolTip="{Binding Text}" Command="{x:Static ApplicationCommands.New}" CommandParameter="{Binding}">
										<Image Source="{Binding Image}"/>
									</Button>
								</DataTemplate>
							</ItemsControl.ItemTemplate>
							<ItemsControl.GroupStyle>
								<GroupStyle>
									<GroupStyle.HeaderTemplate>
										<DataTemplate>
											<Separator />
										</DataTemplate>
									</GroupStyle.HeaderTemplate>
								</GroupStyle>
							</ItemsControl.GroupStyle>
							<ItemsControl.ItemsPanel>
								<ItemsPanelTemplate>
									<UniformGrid />
								</ItemsPanelTemplate>
							</ItemsControl.ItemsPanel>
						</ItemsControl>
						<ItemsControl Grid.Row="1" Grid.Column="1" ItemsSource="{Binding Source={StaticResource colorTable}}">
							<ItemsControl.ItemTemplate>
								<DataTemplate>
									<Button ToolTip="{Binding}" Command="{x:Static ApplicationCommands.Properties}" CommandParameter="{Binding}">
										<Rectangle Stroke="Black" StrokeThickness="1" Width="16" Height="16">
											<Rectangle.Fill>
												<SolidColorBrush Color="{Binding}" />
											</Rectangle.Fill>
										</Rectangle>
									</Button>
								</DataTemplate>
							</ItemsControl.ItemTemplate>
							<ItemsControl.ItemsPanel>
								<ItemsPanelTemplate>
									<UniformGrid />
								</ItemsPanelTemplate>
							</ItemsControl.ItemsPanel>
						</ItemsControl>					
					</Grid>
				</uiC:PpsPopup>
			</ui:PpsUISplitCommandButton.Popup>
		</ui:PpsUISplitCommandButton>-->
		<ui:PpsUICommandButton x:Name="prevImage" Order="300;200" Description="Vorheriges Bild" Image="prevPane" IsVisible="True" Command="{x:Static MediaCommands.PreviousTrack}" />
		<ui:PpsUICommandPanel x:Name="imageGaleryInfo" Order="300;210">
			<ui:PpsUICommandPanel.ContentTemplate>
				<DataTemplate>
					<TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Padding="5">
						<Run Text="{Binding Item1,StringFormat=N0,Mode=OneWay}" />/<Run Text="{Binding Item2,StringFormat=N0,Mode=OneWay}" />
					</TextBlock>
				</DataTemplate>
			</ui:PpsUICommandPanel.ContentTemplate>
		</ui:PpsUICommandPanel>
		
		<ui:PpsUICommandButton x:Name="nextImage" Order="300;220" Description="Nächstes Bild" Image="nextPane" IsVisible="True" Command="{x:Static MediaCommands.NextTrack}" />
	</uiC:PpsWindowPaneControl.Commands>

	<uiC:PpsScrollViewer x:Name="scrollViewer" IsZoomAllowed="True" IsPanningAllowed="True" PanningMode="Both" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" IsManipulationEnabled="True">
		<Grid>
			<Image x:Name="imageView" Stretch="None" Source="{Binding CurrentImage}">
				<Image.LayoutTransform>
					<ScaleTransform ScaleX="{Binding ElementName=scrollViewer,Path=ScaleFactor,Mode=OneWay}" ScaleY="{Binding ElementName=scrollViewer,Path=ScaleFactor,Mode=OneWay}" />
				</Image.LayoutTransform>
			</Image>

			<uiC:PpsShapeCanvas x:Name="shapeCanvas" Width="{Binding ElementName=imageView,Path=ActualWidth}" Height="{Binding ElementName=imageView,Path=ActualHeight}">
				<uiC:PpsShapeCanvas.LayoutTransform>
					<ScaleTransform ScaleX="{Binding ElementName=scrollViewer,Path=ScaleFactor,Mode=OneWay}" ScaleY="{Binding ElementName=scrollViewer,Path=ScaleFactor,Mode=OneWay}" />
				</uiC:PpsShapeCanvas.LayoutTransform>
			</uiC:PpsShapeCanvas>
		</Grid>
	</uiC:PpsScrollViewer>


	<!--<UserControl.Resources>

		<sys:Double x:Key="PpsPicturePaneImagePanelHeight">134</sys:Double>
		<SolidColorBrush x:Key="PpsPicturePaneBorderBrush" Color="{StaticResource PPSnAccentColor}" Opacity="0.45"/>
		<SolidColorBrush x:Key="PpsPicturePaneBackgroundBrush" Color="{StaticResource PPSnDesktopColor}" Opacity="0.45"/>

		<Style x:Key="PPSnStrokeSettingsListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ListBoxItem}">
						<ContentPresenter />
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="PPSnStrokeColorListBoxStyle" TargetType="{x:Type ListBox}" BasedOn="{StaticResource PPSnListBoxStyle}">
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="ItemContainerStyle" Value="{StaticResource PPSnStrokeSettingsListBoxItemStyle}"/>
			<Setter Property="ItemTemplate">
				<Setter.Value>
					<DataTemplate>
						<uiC:PpsButton x:Name="colorButton"
									   Command="{x:Static ui:PpsPicturePane.OverlaySetColorCommand}" 
									   CommandParameter="{Binding}"
									   Focusable="False"
									   Background="Transparent"
									   BorderBrush="{StaticResource PpsPicturePaneBorderBrush}"
									   HorizontalContentAlignment="Stretch"
									   VerticalContentAlignment="Stretch"
									   Padding="0,2" Width="30" Height="30" Margin="3">
							<uiC:PpsButton.Content>
								<Rectangle Fill="{Binding Brush}"/>
							</uiC:PpsButton.Content>
						</uiC:PpsButton>
						<DataTemplate.Triggers>
							<DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True">
								<Setter TargetName="colorButton" Property="BorderBrush" Value="{StaticResource PPSnControlFocusedBorderBrush}"/>
								<Setter TargetName="colorButton" Property="BorderThickness" Value="2"/>
								<Setter TargetName="colorButton" Property="Padding" Value="-1,1"/>
							</DataTrigger>
						</DataTemplate.Triggers>
					</DataTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="ItemsPanel">
				<Setter.Value>
					<ItemsPanelTemplate>
						<UniformGrid Columns="3"/>
					</ItemsPanelTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style x:Key="PPSnStrokeThicknessListBoxStyle" TargetType="{x:Type ListBox}" BasedOn="{StaticResource PPSnListBoxStyle}">
			<Setter Property="Focusable" Value="False"/>
			<Setter Property="ItemContainerStyle" Value="{StaticResource PPSnStrokeSettingsListBoxItemStyle}"/>
			<Setter Property="ItemTemplate">
				<Setter.Value>
					<DataTemplate>
						<uiC:PpsButton x:Name="thicknessButton"
									   Command="{x:Static ui:PpsPicturePane.OverlaySetThicknessCommand}" 
									   CommandParameter="{Binding}"
									   Focusable="False"
									   Background="Transparent"
									   BorderBrush="Transparent"
									   HorizontalContentAlignment="Stretch"
									   VerticalContentAlignment="Stretch"
									   Padding="1,3" Height="26" Margin="3,1,3,0">
							<uiC:PpsButton.Content>
								<Rectangle Height="{Binding Size}" Fill="{StaticResource PPSnWindowForegroundBrush}" Margin="6,0"/>
							</uiC:PpsButton.Content>
						</uiC:PpsButton>
						<DataTemplate.Triggers>
							<DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True">
								<Setter TargetName="thicknessButton" Property="BorderBrush" Value="{StaticResource PPSnControlFocusedBorderBrush}"/>
								<Setter TargetName="thicknessButton" Property="BorderThickness" Value="2"/>
								<Setter TargetName="thicknessButton" Property="Padding" Value="0,2"/>
							</DataTrigger>
						</DataTemplate.Triggers>
					</DataTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</UserControl.Resources>
	
	<Grid>
		<Grid.Margin>
			<Thickness Left="{StaticResource PPSnPaneBorderSizeLeft}" Top="16" Right="0" Bottom="0" />
		</Grid.Margin>
		<Grid.RowDefinitions>
			<RowDefinition />
			<RowDefinition Height="auto"/>
		</Grid.RowDefinitions>

		<Image Source="{Binding RelativeSource={RelativeSource AncestorType={x:Type ui:PpsPicturePane}}, Path=SelectedCamera.Preview, Mode=OneWay}"
			   Visibility="{Binding SelectedCamera, RelativeSource={RelativeSource AncestorType={x:Type ui:PpsPicturePane}}, Converter={x:Static ui:PpsConverter.Visibility}}" />

		<Image Grid.RowSpan="2"
			   Width="1"
			   VerticalAlignment="Bottom"
			   HorizontalAlignment="Center"
			   Source="{Binding RelativeSource={RelativeSource AncestorType={x:Type ui:PpsPicturePane}}, Path=LastSnapshot.DataLazy.RawData, Mode=OneWay, NotifyOnTargetUpdated=True}" 
			   Opacity="0">
			<Image.RenderTransform>
				<ScaleTransform  />
			</Image.RenderTransform>
			<Image.Triggers>
				<EventTrigger RoutedEvent="Binding.TargetUpdated">
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:0.25" />
							<DoubleAnimation Storyboard.TargetProperty="Opacity" From="1" To="0.4" BeginTime="0:0:0.25" Duration="0:0:0.5" />
							<DoubleAnimation 
								Storyboard.TargetProperty="Width" 
								From="{Binding RelativeSource={RelativeSource AncestorType={x:Type UserControl}}, Path=ActualWidth}" 
								To="0" 
								BeginTime="0:0:0.25" 
								Duration="0:0:0.5"/>
						</Storyboard>
					</BeginStoryboard>
				</EventTrigger>
			</Image.Triggers>
		</Image>

		

		<Grid>
			<Image x:Name="CurrentObjectImageMax"
				   DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type ui:PpsPicturePane}}, Path=SelectedAttachment, UpdateSourceTrigger=PropertyChanged,Mode=OneWay}"
				   Source="{Binding LinkedObject.DataLazy.RawData}">
				--><!-- RK: Image can handle byte[] as source --><!--
			</Image>
			<InkCanvas Cursor="{Binding RelativeSource={RelativeSource AncestorType={x:Type ui:PpsPicturePane}}, Path=InkEditCursor}"
					   Width="{Binding ElementName=CurrentObjectImageMax, Path=Source.Width}"
					   Height="{Binding ElementName=CurrentObjectImageMax, Path=Source.Height}"
					   UseCustomCursor="True"
					   Background="Transparent"
					   EditingMode="{Binding RelativeSource={RelativeSource AncestorType={x:Type ui:PpsPicturePane}}, Path=InkEditMode, Mode=OneWay}"
					   Strokes="{Binding RelativeSource={RelativeSource AncestorType={x:Type ui:PpsPicturePane}}, Path=InkStrokes, UpdateSourceTrigger=PropertyChanged}"
					   DefaultDrawingAttributes="{Binding RelativeSource={RelativeSource AncestorType={x:Type ui:PpsPicturePane}}, Path=InkDrawingAttributes, Mode=OneWay}">
				<InkCanvas.LayoutTransform>
					<MultiBinding Mode="OneWay" Converter="{StaticResource ScaleConverter}">
						<Binding ElementName="CurrentObjectImageMax" Path="ActualWidth"/>
						<Binding ElementName="CurrentObjectImageMax" Path="Source.Width"/>
					</MultiBinding>
				</InkCanvas.LayoutTransform>
			</InkCanvas>
			<Grid.Style>
				<Style TargetType="{x:Type Grid}">
					<Setter Property="Visibility" Value="Visible"/>
					<Style.Triggers>
						<DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ui:PpsPicturePane}}, Path=SelectedAttachment}" Value="{x:Null}">
							<Setter Property="Visibility" Value="Hidden"/>
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</Grid.Style>
		</Grid>

		<Border Grid.RowSpan="2" Margin="0,16,0,0"
				HorizontalAlignment="Right" VerticalAlignment="Top" Padding="3"
				Opacity="0.60"
				BorderThickness="1"
				BorderBrush="{StaticResource PpsPicturePaneBorderBrush}"
				Background="{StaticResource PpsPicturePaneBackgroundBrush}">
			<Border.Style>
				<Style TargetType="Border">
					<Setter Property="Visibility" Value="Visible"/>
					<Style.Triggers>
						<DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ui:PpsPicturePane}}, Path=SelectedAttachment}" Value="{x:Null}">
							<Setter Property="Visibility" Value="Hidden"/>
						</DataTrigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.2" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<DoubleAnimation Storyboard.TargetProperty="Opacity" To="0.60" Duration="0:0:0.2"/>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
					</Style.Triggers>
				</Style>
			</Border.Style>

			<Grid DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type ui:PpsPicturePane}}, Path=StrokeSettings}">
				<Grid.RowDefinitions>
					<RowDefinition Height="auto"/>
					<RowDefinition/>
					<RowDefinition/>
				</Grid.RowDefinitions>

				<ContentControl Grid.Row="0" Focusable="False">
					<ContentControl.Template>
						<ControlTemplate>
							<ControlTemplate.Resources>
								<Style TargetType="{x:Type uiC:PpsButton}" >
									<Setter Property="Foreground" Value="{StaticResource PPSnActionButtonBrush}" />
									<Setter Property="BorderThickness" Value="1" />
									<Setter Property="BorderBrush" Value="Transparent" />
									<Setter Property="Padding" Value="1" />
									<Setter Property="Margin" Value="3" />
									<Setter Property="Width" Value="30" />
									<Setter Property="Height" Value="30" />
									<Setter Property="DisplayMode" Value="Image" />
									<Setter Property="GeometrySize" Value="24" />
								</Style>
							</ControlTemplate.Resources>
							<Grid Margin="0,0,0,4">
								<Grid.ColumnDefinitions>
									<ColumnDefinition />
									<ColumnDefinition />
									<ColumnDefinition />
								</Grid.ColumnDefinitions>
								<uiC:PpsButton x:Name="editButton"
											   Command="{x:Static ui:PpsPicturePane.OverlayEditFreehandCommand}"
											   GeometryName="edit" />
								<uiC:PpsButton x:Name="cancelButton"
											   Command="{x:Static ui:PpsPicturePane.OverlayCancelEditModeCommand}"
											   Grid.Column="1"
											   GeometryName="cursor" />
								<uiC:PpsButton x:Name="removeButton"
											   Command="{x:Static ui:PpsPicturePane.OverlayRemoveStrokeCommand}"
											   Grid.Column="2"
											   GeometryName="eraser" />
							</Grid>
							<ControlTemplate.Triggers>
								<DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ui:PpsPicturePane}}, Path=InkEditMode}" Value="{x:Static InkCanvasEditingMode.Ink}">
									<Setter TargetName="editButton" Property="BorderBrush" Value="{StaticResource PPSnControlFocusedBorderBrush}" />
									<Setter TargetName="editButton" Property="BorderThickness" Value="2" />
									<Setter TargetName="editButton" Property="Padding" Value="0" />
								</DataTrigger>
								<DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type ui:PpsPicturePane}}, Path=InkEditMode}" Value="{x:Static InkCanvasEditingMode.EraseByStroke}">
									<Setter TargetName="removeButton" Property="BorderBrush" Value="{StaticResource PPSnControlFocusedBorderBrush}" />
									<Setter TargetName="removeButton" Property="BorderThickness" Value="2" />
									<Setter TargetName="removeButton" Property="Padding" Value="0" />
								</DataTrigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</ContentControl.Template>
				</ContentControl>

				<ListBox Grid.Row="1"
						 ItemsSource="{Binding Thicknesses}"
						 SelectedItem="{Binding RelativeSource={RelativeSource AncestorType={x:Type ui:PpsPicturePane}}, Path=CurrentStrokeThickness, Mode=OneWay}"
						 Style="{StaticResource PPSnStrokeThicknessListBoxStyle}"/>
				<ListBox Grid.Row="2" Margin="0,3,0,0"
						 ItemsSource="{Binding Colors}"
						 SelectedItem="{Binding RelativeSource={RelativeSource AncestorType={x:Type ui:PpsPicturePane}}, Path=CurrentStrokeColor, Mode=OneWay}"
						 Style="{StaticResource PPSnStrokeColorListBoxStyle}"/>
			</Grid>
		</Border>
		
		<ListBox ItemsSource="{Binding RelativeSource={RelativeSource AncestorType={x:Type ui:PpsPicturePane}}, Path=CameraEnum}"
				 SelectedItem="{Binding RelativeSource={RelativeSource AncestorType={x:Type ui:PpsPicturePane}}, Path=SelectedCamera, Mode=OneWay}"
				 Style="{StaticResource PPSnListBoxStyle}"
				 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
				 HorizontalAlignment="Left" VerticalAlignment="Top" Margin="0,16,0,0"
				 Focusable="False">
			<ListBox.ItemTemplate>
				<DataTemplate>
					<uiC:PpsButton x:Name="cameraButton"
								   Command="{x:Static ui:PpsPicturePane.ChangeCameraCommand}" 
								   CommandParameter="{Binding}"
								   Focusable="False"
								   BorderBrush="{StaticResource PpsPicturePaneBorderBrush}"
								   Background="{StaticResource PpsPicturePaneBackgroundBrush}"
								   Width="170"
								   Padding="1,3"
								   HorizontalContentAlignment="Stretch"
								   VerticalContentAlignment="Stretch"
								   ToolTip="Diese Kamera auswählen">
						<uiC:PpsButton.Height>
							<MultiBinding Mode="OneWay" Converter="{StaticResource PreviewHeightConverter}">
								<Binding ElementName="cameraButton" Path="Width"/>
								<Binding Path="PreviewVideoRatio"/>
							</MultiBinding>
						</uiC:PpsButton.Height>
						<uiC:PpsButton.Content>
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition/>
									<RowDefinition Height="19"/>
								</Grid.RowDefinitions>
								<Image Source="{Binding Preview, TargetNullValue={x:Null}}"/>
								<Viewbox Grid.Row="0" Width="48" Height="48" VerticalAlignment="Center" HorizontalAlignment="Center" Opacity=".65">
									<Canvas Width="24" Height="24">
										<Path Data="{StaticResource cameraPathGeometry}" Fill="WhiteSmoke"/>
									</Canvas>
								</Viewbox>
								<TextBlock Grid.Row="1" Text="{Binding Name}"
										   TextAlignment="Center" VerticalAlignment="Center"
										   TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" />
							</Grid>
						</uiC:PpsButton.Content>
					</uiC:PpsButton>
					<DataTemplate.Triggers>
						<DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True">
							<Setter TargetName="cameraButton" Property="BorderBrush" Value="{StaticResource PPSnControlFocusedBorderBrush}"/>
							<Setter TargetName="cameraButton" Property="BorderThickness" Value="2"/>
							<Setter TargetName="cameraButton" Property="Padding" Value="0,2"/>
						</DataTrigger>
					</DataTemplate.Triggers>
				</DataTemplate>
			</ListBox.ItemTemplate>
			<ListBox.ItemContainerStyle>
				<Style TargetType="{x:Type ListBoxItem}">
					<Setter Property="Margin" Value="0,0,0,16"/>
					<Setter Property="Focusable" Value="False"/>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type ListBoxItem}">
								<ContentPresenter />
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</ListBox.ItemContainerStyle>
		</ListBox>

		<Border x:Name="existingImagesPanel" Grid.Row="1" Height="{StaticResource PpsPicturePaneImagePanelHeight}" Padding="0,16,0,0">
			<ListBox x:Name="imagesList" 
					 ItemsSource="{Binding Source={StaticResource FilteredAttachments}}"
					 SelectedItem="{Binding RelativeSource={RelativeSource AncestorType={x:Type ui:PpsPicturePane}}, Path=SelectedAttachment, Mode=OneWay}"
					 Style="{StaticResource PPSnListBoxStyle}"
					 ScrollViewer.VerticalScrollBarVisibility="Disabled"
					 Focusable="False">
				<ListBox.ItemsPanel>
					<ItemsPanelTemplate>
						<StackPanel Orientation="Horizontal"/>
					</ItemsPanelTemplate>
				</ListBox.ItemsPanel>
				<ListBox.ItemTemplate>
					<DataTemplate>
						<uiC:PpsButton x:Name="imageButton"
									   Command="{x:Static ui:PpsPicturePane.EditOverlayCommand}" 
									   CommandParameter="{Binding}"
									   Focusable="False"
									   BorderBrush="{StaticResource PpsPicturePaneBorderBrush}"
									   Background="{StaticResource PpsPicturePaneBackgroundBrush}"
									   Width="170" 
									   Padding="1,3"
									   HorizontalContentAlignment="Stretch"
									   VerticalContentAlignment="Stretch">
							<uiC:PpsButton.Content>
								<Grid>
									<Grid.RowDefinitions>
										<RowDefinition/>
										<RowDefinition Height="19"/>
									</Grid.RowDefinitions>
									<Image Source="{Binding Path=LinkedObject.DataLazy.PreviewImageLazy, Mode=OneWay}" />
									<TextBlock Grid.Row="1" Text="{Binding Path=Name}"
											   TextAlignment="Center" VerticalAlignment="Center"
											   TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" />
									<uiC:PpsButton x:Name="removeButton"
												   Command="{x:Static ApplicationCommands.Delete}" CommandParameter="{Binding}"
												   DisplayMode="Circle" GeometryName="delete" GeometrySize="36"
												   Foreground="{StaticResource PPSnWindowForegroundBrush}"
												   Fill="{StaticResource PpsPicturePaneBackgroundBrush}"
												   HorizontalAlignment="Right"
												   VerticalAlignment="Top"
												   Margin="0,3,3,0"
												   Visibility="Hidden" />
								</Grid>
							</uiC:PpsButton.Content>
						</uiC:PpsButton>
						<DataTemplate.Triggers>
							<DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type ListBoxItem}}}" Value="True">
								<Setter TargetName="imageButton" Property="BorderBrush" Value="{StaticResource PPSnControlFocusedBorderBrush}"/>
								<Setter TargetName="imageButton" Property="BorderThickness" Value="2"/>
								<Setter TargetName="imageButton" Property="Padding" Value="0,2"/>
								<Setter TargetName="removeButton" Property="Visibility" Value="Visible"/>
							</DataTrigger>
						</DataTemplate.Triggers>
					</DataTemplate>
				</ListBox.ItemTemplate>
				<ListBox.ItemContainerStyle>
					<Style TargetType="{x:Type ListBoxItem}">
						<Setter Property="Margin" Value="0,0,16,0"/>
						<Setter Property="Focusable" Value="False"/>
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="{x:Type ListBoxItem}">
									<ContentPresenter />
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>
				</ListBox.ItemContainerStyle>
			</ListBox>
		</Border>

		<ToggleButton Width="170" Height="39" HorizontalAlignment="Left" VerticalAlignment="Bottom" ClickMode="Press" Focusable="False" >
			<ToggleButton.Triggers>
				<EventTrigger RoutedEvent="ToggleButton.Checked">
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetProperty="Height"
											 Storyboard.TargetName="existingImagesPanel"
											 To="0" 
											 Duration="0:0:0.25" />
						</Storyboard>
					</BeginStoryboard>
				</EventTrigger>
				<EventTrigger RoutedEvent="ToggleButton.Unchecked">
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetProperty="Height"
											 Storyboard.TargetName="existingImagesPanel"
											 To="{StaticResource PpsPicturePaneImagePanelHeight}" 
											 Duration="0:0:0.25" />
						</Storyboard>
					</BeginStoryboard>
				</EventTrigger>
			</ToggleButton.Triggers>

			<ToggleButton.Template>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border x:Name="RootBorder" BorderBrush="{StaticResource PpsPicturePaneBorderBrush}" BorderThickness="1,1,1,1"
							Background="{StaticResource PpsPicturePaneBackgroundBrush}"
							SnapsToDevicePixels="True"
							CornerRadius="15,15,0,0">
						<Grid Margin="3,0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="32"/>
								<ColumnDefinition/>
								<ColumnDefinition Width="32"/>
							</Grid.ColumnDefinitions>
							<uiC:PpsGeometryImage x:Name="chevronLeft"
												  GeometryName="goBack" GeometryCircled="false"
												  Foreground="{StaticResource PPSnActionButtonBrush}" Opacity=".65">
								<uiC:PpsGeometryImage.RenderTransform>
									<RotateTransform Angle="-90"/>
								</uiC:PpsGeometryImage.RenderTransform>
								<uiC:PpsGeometryImage.RenderTransformOrigin>
									<Point X="0.5" Y="0.5"/>
								</uiC:PpsGeometryImage.RenderTransformOrigin>
							</uiC:PpsGeometryImage>
							<StackPanel Grid.Column="1" Orientation="Horizontal" HorizontalAlignment="Center">
								<uiC:PpsGeometryImage GeometryName="imageMultiple" GeometryCircled="false"
													  Foreground="{StaticResource PPSnActionButtonBrush}" Opacity=".65"
													  Width="20" Height="20" />
								<TextBlock Text="Bilderliste" Margin="4,0,0,0" VerticalAlignment="Center" Foreground="{StaticResource PPSnActionButtonBrush}"/>
							</StackPanel>
							<uiC:PpsGeometryImage x:Name="chevronRight" Grid.Column="2"
												  GeometryName="goBack" GeometryCircled="false"
												  Foreground="{StaticResource PPSnActionButtonBrush}" Opacity=".65">
								<uiC:PpsGeometryImage.RenderTransform>
									<RotateTransform Angle="-90"/>
								</uiC:PpsGeometryImage.RenderTransform>
								<uiC:PpsGeometryImage.RenderTransformOrigin>
									<Point X="0.5" Y="0.5"/>
								</uiC:PpsGeometryImage.RenderTransformOrigin>
							</uiC:PpsGeometryImage>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="chevronLeft" Property="LayoutTransform">
								<Setter.Value>
									<RotateTransform Angle="180"/>
								</Setter.Value>
							</Setter>
							<Setter TargetName="chevronRight" Property="LayoutTransform">
								<Setter.Value>
									<RotateTransform Angle="180"/>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="RootBorder" Property="BorderBrush" Value="{StaticResource PPSnControlFocusedBorderBrush}" />
							<Setter TargetName="RootBorder" Property="Background" Value="{StaticResource PPSnMouseOverBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</ToggleButton.Template>
		</ToggleButton>
	</Grid>-->
</uiC:PpsWindowPaneControl>